{"version":3,"sources":["../../src/store/store-request-sender.js"],"names":["StoreRequestSender","urlHelper","requestSender","data","callback","url","getInstrumentsUrl","storeId","customerId","currencyCode","options","headers","sendRequest","getTrustedShippingAddressUrl","payload","method","POST","postRequest","getInstrumentByIdUrl","instrumentId","DELETE","config","UrlHelper","create","RequestSender"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;;;;;;;;;IAKqBA,kB;AAYjB;AACJ;AACA;AACA;AACA;AACI,8BAAYC,SAAZ,EAAuBC,aAAvB,EAAsC;AAAA;;AAClC;AACR;AACA;AACA;AACQ,SAAKD,SAAL,GAAiBA,SAAjB;AAEA;AACR;AACA;AACA;;AACQ,SAAKC,aAAL,GAAqBA,aAArB;AACH;AAED;AACJ;AACA;AACA;AACA;;;;;WACI,yBAAgBC,IAAhB,EAAsBC,QAAtB,EAAgC;AAC5B,UAAMC,GAAG,GAAG,KAAKJ,SAAL,CAAeK,iBAAf,CACRH,IAAI,CAACI,OADG,EAERJ,IAAI,CAACK,UAFG,EAGRL,IAAI,CAACM,YAHG,CAAZ;AAKA,UAAMC,OAAO,GAAG;AACZC,QAAAA,OAAO,EAAE,2BAAaR,IAAb;AADG,OAAhB;AAIA,WAAKD,aAAL,CAAmBU,WAAnB,CAA+BP,GAA/B,EAAoC,IAApC,EAA0CK,OAA1C,EAAmDN,QAAnD;AACH;AAED;AACJ;AACA;AACA;AACA;;;;WACI,oCAA2BD,IAA3B,EAAiCC,QAAjC,EAA2C;AACvC,UAAMC,GAAG,GAAG,KAAKJ,SAAL,CAAeY,4BAAf,CACRV,IAAI,CAACI,OADG,EAERJ,IAAI,CAACK,UAFG,EAGRL,IAAI,CAACM,YAHG,CAAZ;AAKA,UAAMK,OAAO,GAAG,iDAAmCX,IAAnC,CAAhB;AACA,UAAMO,OAAO,GAAG;AACZK,QAAAA,MAAM,EAAEC,iBADI;AAEZL,QAAAA,OAAO,EAAE,2BAAaR,IAAb;AAFG,OAAhB;AAKA,WAAKD,aAAL,CAAmBe,WAAnB,CAA+BZ,GAA/B,EAAoCS,OAApC,EAA6CJ,OAA7C,EAAsDN,QAAtD;AACH;AAED;AACJ;AACA;AACA;AACA;;;;WACI,iCAAwBD,IAAxB,EAA8BC,QAA9B,EAAwC;AACpC,UAAMC,GAAG,GAAG,KAAKJ,SAAL,CAAeiB,oBAAf,CACRf,IAAI,CAACI,OADG,EAERJ,IAAI,CAACK,UAFG,EAGRL,IAAI,CAACgB,YAHG,EAIRhB,IAAI,CAACM,YAJG,CAAZ;AAMA,UAAMC,OAAO,GAAG;AACZK,QAAAA,MAAM,EAAEK,mBADI;AAEZT,QAAAA,OAAO,EAAE,2BAAaR,IAAb;AAFG,OAAhB;AAKA,WAAKD,aAAL,CAAmBU,WAAnB,CAA+BP,GAA/B,EAAoC,IAApC,EAA0CK,OAA1C,EAAmDN,QAAnD;AACH;;;;AAtFD;AACJ;AACA;AACA;AACI,oBAAciB,MAAd,EAAsB;AAClB,UAAMpB,SAAS,GAAGqB,mBAAUC,MAAV,CAAiBF,MAAjB,CAAlB;;AACA,UAAMnB,aAAa,GAAGsB,uBAAcD,MAAd,EAAtB;;AAEA,aAAO,IAAIvB,kBAAJ,CAAuBC,SAAvB,EAAkCC,aAAlC,CAAP;AACH","sourcesContent":["import RequestSender from '../common/http-request/request-sender';\nimport { DELETE, POST } from '../common/http-request/method-types';\nimport UrlHelper from './url-helper';\nimport {\n    mapToHeaders,\n    mapToTrustedShippingAddressPayload,\n} from './v2/mappers';\n\nexport default class StoreRequestSender {\n    /**\n     * @param {Object} config\n     * @returns {StoreRequestSender}\n     */\n    static create(config) {\n        const urlHelper = UrlHelper.create(config);\n        const requestSender = RequestSender.create();\n\n        return new StoreRequestSender(urlHelper, requestSender);\n    }\n\n    /**\n     * @param {UrlHelper} urlHelper\n     * @param {RequestSender} requestSender\n     * @returns {void}\n     */\n    constructor(urlHelper, requestSender) {\n        /**\n         * @private\n         * @type {UrlHelper}\n         */\n        this.urlHelper = urlHelper;\n\n        /**\n         * @private\n         * @type {RequestSender}\n         */\n        this.requestSender = requestSender;\n    }\n\n    /**\n     * @param {Object} data\n     * @param {Function} [callback]\n     * @return {void}\n     */\n    loadInstruments(data, callback) {\n        const url = this.urlHelper.getInstrumentsUrl(\n            data.storeId,\n            data.customerId,\n            data.currencyCode,\n        );\n        const options = {\n            headers: mapToHeaders(data),\n        };\n\n        this.requestSender.sendRequest(url, null, options, callback);\n    }\n\n    /**\n     * @param {Object} data\n     * @param {Function} [callback]\n     * @return {void}\n     */\n    loadInstrumentsWithAddress(data, callback) {\n        const url = this.urlHelper.getTrustedShippingAddressUrl(\n            data.storeId,\n            data.customerId,\n            data.currencyCode,\n        );\n        const payload = mapToTrustedShippingAddressPayload(data);\n        const options = {\n            method: POST,\n            headers: mapToHeaders(data),\n        };\n\n        this.requestSender.postRequest(url, payload, options, callback);\n    }\n\n    /**\n     * @param {Object} data\n     * @param {Function} [callback]\n     * @return {void}\n     */\n    deleteShopperInstrument(data, callback) {\n        const url = this.urlHelper.getInstrumentByIdUrl(\n            data.storeId,\n            data.customerId,\n            data.instrumentId,\n            data.currencyCode,\n        );\n        const options = {\n            method: DELETE,\n            headers: mapToHeaders(data),\n        };\n\n        this.requestSender.sendRequest(url, null, options, callback);\n    }\n}\n"],"file":"store-request-sender.js"}