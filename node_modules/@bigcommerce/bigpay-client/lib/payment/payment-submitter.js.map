{"version":3,"sources":["../../src/payment/payment-submitter.js"],"names":["PaymentSubmitter","urlHelper","requestSender","payloadMapper","ppsdkPayloadMapper","data","callback","paymentMethod","type","API","SDK","Error","payload","mapToPayload","url","getPpsdkPaymentUrl","getPaymentUrl","options","headers","mapToHeaders","postRequest","config","UrlHelper","create","RequestSender","PayloadMapper","PpsdkPayloadMapper"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;IAEqBA,gB;AAcjB;AACJ;AACA;AACA;AACA;AACA;AACA;AACI,4BAAYC,SAAZ,EAAuBC,aAAvB,EAAsCC,aAAtC,EAAqDC,kBAArD,EAAyE;AAAA;;AACrE;AACR;AACA;AACA;AACQ,SAAKH,SAAL,GAAiBA,SAAjB;AAEA;AACR;AACA;AACA;;AACQ,SAAKC,aAAL,GAAqBA,aAArB;AAEA;AACR;AACA;AACA;;AACQ,SAAKC,aAAL,GAAqBA,aAArB;AAEA;AACR;AACA;AACA;;AACQ,SAAKC,kBAAL,GAA0BA,kBAA1B;AACH;AAED;AACJ;AACA;AACA;AACA;AACA;;;;;WACI,uBAAcC,IAAd,EAAoBC,QAApB,EAA8B;AAC1B,gCAA+BD,IAA/B,CAAQE,aAAR;AAAA,UAAQA,aAAR,oCAAwB,EAAxB;;AAEA,UAAIA,aAAa,CAACC,IAAd,KAAuBC,iBAAvB,IAA8BF,aAAa,CAACC,IAAd,KAAuBE,iBAAzD,EAA8D;AAC1D,cAAM,IAAIC,KAAJ,WAAaJ,aAAa,CAACC,IAA3B,wBAAN;AACH;;AAED,UAAMI,OAAO,GAAGL,aAAa,CAACC,IAAd,KAAuBE,iBAAvB,GAA6B,KAAKN,kBAAL,CAAwBS,YAAxB,CAAqCR,IAArC,CAA7B,GAA0E,KAAKF,aAAL,CAAmBU,YAAnB,CAAgCR,IAAhC,CAA1F;AACA,UAAMS,GAAG,GAAGP,aAAa,CAACC,IAAd,KAAuBE,iBAAvB,GAA6B,KAAKT,SAAL,CAAec,kBAAf,EAA7B,GAAmE,KAAKd,SAAL,CAAee,aAAf,EAA/E;AACA,UAAMC,OAAO,GAAG;AACZC,QAAAA,OAAO,EAAE,KAAKf,aAAL,CAAmBgB,YAAnB,CAAgCd,IAAhC;AADG,OAAhB;AAIA,WAAKH,aAAL,CAAmBkB,WAAnB,CAA+BN,GAA/B,EAAoCF,OAApC,EAA6CK,OAA7C,EAAsDX,QAAtD;AACH;;;;AAlED;AACJ;AACA;AACA;AACI,oBAAce,MAAd,EAAsB;AAClB,UAAMpB,SAAS,GAAGqB,mBAAUC,MAAV,CAAiBF,MAAjB,CAAlB;;AACA,UAAMnB,aAAa,GAAGsB,uBAAcD,MAAd,EAAtB;;AACA,UAAMpB,aAAa,GAAGsB,uBAAcF,MAAd,EAAtB;;AACA,UAAMnB,kBAAkB,GAAGsB,4BAAmBH,MAAnB,EAA3B;;AAEA,aAAO,IAAIvB,gBAAJ,CAAqBC,SAArB,EAAgCC,aAAhC,EAA+CC,aAA/C,EAA8DC,kBAA9D,CAAP;AACH","sourcesContent":["import RequestSender from '../common/http-request/request-sender';\nimport { API, SDK } from './payment-types';\nimport PayloadMapper from './v1/payment-mappers/payload-mapper';\nimport PpsdkPayloadMapper from './ppsdk/payment-mappers/ppsdk-payload-mapper';\nimport UrlHelper from './url-helper';\n\nexport default class PaymentSubmitter {\n    /**\n     * @param {Object} config\n     * @returns {PaymentSubmitter}\n     */\n    static create(config) {\n        const urlHelper = UrlHelper.create(config);\n        const requestSender = RequestSender.create();\n        const payloadMapper = PayloadMapper.create();\n        const ppsdkPayloadMapper = PpsdkPayloadMapper.create();\n\n        return new PaymentSubmitter(urlHelper, requestSender, payloadMapper, ppsdkPayloadMapper);\n    }\n\n    /**\n     * @param {UrlHelper} urlHelper\n     * @param {RequestSender} requestSender\n     * @param {PayloadMapper} payloadMapper\n     * @param {PpsdkPayloadMapper} ppsdkPayloadMapper\n     * @returns {void}\n     */\n    constructor(urlHelper, requestSender, payloadMapper, ppsdkPayloadMapper) {\n        /**\n         * @private\n         * @type {UrlHelper}\n         */\n        this.urlHelper = urlHelper;\n\n        /**\n         * @private\n         * @type {RequestSender}\n         */\n        this.requestSender = requestSender;\n\n        /**\n         * @private\n         * @type {PayloadMapper}\n         */\n        this.payloadMapper = payloadMapper;\n\n        /**\n        * @private\n        * @type {PpsdkPayloadMapper}\n        */\n        this.ppsdkPayloadMapper = ppsdkPayloadMapper;\n    }\n\n    /**\n     * @param {PaymentRequestData} data\n     * @param {Function} [callback]\n     * @returns {void}\n     * @throws {Error}\n     */\n    submitPayment(data, callback) {\n        const { paymentMethod = {} } = data;\n\n        if (paymentMethod.type !== API && paymentMethod.type !== SDK) {\n            throw new Error(`${paymentMethod.type} is not supported.`);\n        }\n\n        const payload = paymentMethod.type === SDK ? this.ppsdkPayloadMapper.mapToPayload(data) : this.payloadMapper.mapToPayload(data);\n        const url = paymentMethod.type === SDK ? this.urlHelper.getPpsdkPaymentUrl() : this.urlHelper.getPaymentUrl();\n        const options = {\n            headers: this.payloadMapper.mapToHeaders(data),\n        };\n\n        this.requestSender.postRequest(url, payload, options, callback);\n    }\n}\n"],"file":"payment-submitter.js"}