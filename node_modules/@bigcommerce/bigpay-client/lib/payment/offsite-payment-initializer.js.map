{"version":3,"sources":["../../src/payment/offsite-payment-initializer.js"],"names":["OffsitePaymentInitializer","urlHelper","formPoster","payloadMapper","data","callback","target","paymentMethod","type","HOSTED","Error","payload","mapToPayload","url","getOffsitePaymentUrl","postForm","config","UrlHelper","create","PayloadMapper"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;;;;;;;;;IAEqBA,yB;AAajB;AACJ;AACA;AACA;AACA;AACA;AACI,qCAAYC,SAAZ,EAAuBC,UAAvB,EAAmCC,aAAnC,EAAkD;AAAA;;AAC9C;AACR;AACA;AACA;AACQ,SAAKF,SAAL,GAAiBA,SAAjB;AAEA;AACR;AACA;AACA;;AACQ,SAAKC,UAAL,GAAkBA,UAAlB;AAEA;AACR;AACA;AACA;;AACQ,SAAKC,aAAL,GAAqBA,aAArB;AACH;AAED;AACJ;AACA;AACA;AACA;AACA;AACA;;;;;WACI,kCAAyBC,IAAzB,EAA+BC,QAA/B,EAAyCC,MAAzC,EAAiD;AAC7C,gCAA+BF,IAA/B,CAAQG,aAAR;AAAA,UAAQA,aAAR,oCAAwB,EAAxB;;AAEA,UAAIA,aAAa,CAACC,IAAd,KAAuBC,oBAA3B,EAAmC;AAC/B,cAAM,IAAIC,KAAJ,WAAaH,aAAa,CAACC,IAA3B,wBAAN;AACH;;AAED,UAAMG,OAAO,GAAG,KAAKR,aAAL,CAAmBS,YAAnB,CAAgCR,IAAhC,CAAhB;AACA,UAAMS,GAAG,GAAG,KAAKZ,SAAL,CAAea,oBAAf,EAAZ;AAEA,WAAKZ,UAAL,CAAgBa,QAAhB,CAAyBF,GAAzB,EAA8BF,OAA9B,EAAuCN,QAAvC,EAAiDC,MAAjD;AACH;;;;AAxDD;AACJ;AACA;AACA;AACI,oBAAcU,MAAd,EAAsB;AAClB,UAAMf,SAAS,GAAGgB,mBAAUC,MAAV,CAAiBF,MAAjB,CAAlB;;AACA,UAAMd,UAAU,GAAG,mCAAnB;;AACA,UAAMC,aAAa,GAAGgB,uBAAcD,MAAd,EAAtB;;AAEA,aAAO,IAAIlB,yBAAJ,CAA8BC,SAA9B,EAAyCC,UAAzC,EAAqDC,aAArD,CAAP;AACH","sourcesContent":["import { createFormPoster } from '@bigcommerce/form-poster';\nimport { HOSTED } from './payment-types';\nimport PayloadMapper from './offsite-payment-mappers/payload-mapper';\nimport UrlHelper from './url-helper';\n\nexport default class OffsitePaymentInitializer {\n    /**\n     * @param {Object} config\n     * @returns {OffsitePaymentInitializer}\n     */\n    static create(config) {\n        const urlHelper = UrlHelper.create(config);\n        const formPoster = createFormPoster();\n        const payloadMapper = PayloadMapper.create();\n\n        return new OffsitePaymentInitializer(urlHelper, formPoster, payloadMapper);\n    }\n\n    /**\n     * @param {UrlHelper} urlHelper\n     * @param {FormPoster} formPoster\n     * @param {PayloadMapper} payloadMapper\n     * @returns {void}\n     */\n    constructor(urlHelper, formPoster, payloadMapper) {\n        /**\n         * @private\n         * @type {UrlHelper}\n         */\n        this.urlHelper = urlHelper;\n\n        /**\n         * @private\n         * @type {FormPoster}\n         */\n        this.formPoster = formPoster;\n\n        /**\n         * @private\n         * @type {PayloadMapper}\n         */\n        this.payloadMapper = payloadMapper;\n    }\n\n    /**\n     * @param {PaymentRequestData} data\n     * @param {Function} [callback]\n     * @param {string} target\n     * @returns {void}\n     * @throws {Error}\n     */\n    initializeOffsitePayment(data, callback, target) {\n        const { paymentMethod = {} } = data;\n\n        if (paymentMethod.type !== HOSTED) {\n            throw new Error(`${paymentMethod.type} is not supported.`);\n        }\n\n        const payload = this.payloadMapper.mapToPayload(data);\n        const url = this.urlHelper.getOffsitePaymentUrl();\n\n        this.formPoster.postForm(url, payload, callback, target);\n    }\n}\n"],"file":"offsite-payment-initializer.js"}