{"version":3,"sources":["../../../src/payment/offsite-payment-mappers/payload-mapper.js"],"names":["PayloadMapper","addressMapper","customerMapper","metaMapper","paymentMethodIdMapper","storeMapper","data","authToken","order","payment","paymentMethod","payload","amount","grandTotal","integerAmount","tax","taxTotal","bc_auth_token","currency","gateway","mapToId","notify_url","callbackUrl","order_id","orderId","page_title","document","title","payment_method_id","id","reference_id","return_url","returnUrl","mapToBillingAddress","mapToCustomer","mapToMeta","mapToShippingAddress","mapToStore","formattedPayload","AddressMapper","create","CustomerMapper","MetaMapper","PaymentMethodIdMapper","StoreMapper"],"mappings":"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","sourcesContent":["import objectAssign from 'object-assign';\nimport { omitNil, toString } from '../../common/utils';\nimport AddressMapper from './address-mapper';\nimport CustomerMapper from './customer-mapper';\nimport MetaMapper from './meta-mapper';\nimport PaymentMethodIdMapper from '../payment-method-mappers/payment-method-id-mapper';\nimport StoreMapper from './store-mapper';\n\nexport default class PayloadMapper {\n    /**\n     * @returns {PayloadMapper}\n     */\n    static create() {\n        const addressMapper = AddressMapper.create();\n        const customerMapper = CustomerMapper.create();\n        const metaMapper = MetaMapper.create();\n        const paymentMethodIdMapper = PaymentMethodIdMapper.create();\n        const storeMapper = StoreMapper.create();\n\n        return new PayloadMapper(addressMapper, customerMapper, metaMapper, paymentMethodIdMapper, storeMapper);\n    }\n\n    /**\n     * @param {AddressMapper} addressMapper\n     * @param {CustomerMapper} customerMapper\n     * @param {MetaMapper} metaMapper\n     * @param {PaymentMethodIdMapper} paymentMethodIdMapper\n     * @param {StoreMapper} storeMapper\n     * @returns {Object}\n     */\n    constructor(addressMapper, customerMapper, metaMapper, paymentMethodIdMapper, storeMapper) {\n        /**\n         * @private\n         * @type {AddressMapper}\n         */\n        this.addressMapper = addressMapper;\n\n        /**\n         * @private\n         * @type {CustomerMapper}\n         */\n        this.customerMapper = customerMapper;\n\n        /**\n         * @private\n         * @type {MetaMapper}\n         */\n        this.metaMapper = metaMapper;\n\n        /**\n         * @private\n         * @type {PaymentMethodIdMapper}\n         */\n        this.paymentMethodIdMapper = paymentMethodIdMapper;\n\n        /**\n         * @private\n         * @type {StoreMapper}\n         */\n        this.storeMapper = storeMapper;\n    }\n\n    /**\n     * @param {PaymentRequestData} data\n     * @returns {Object}\n     */\n    mapToPayload(data) {\n        const {\n            authToken, order = {}, payment = {}, paymentMethod = {},\n        } = data;\n\n        const payload = objectAssign(\n            {\n                amount: order.grandTotal ? order.grandTotal.integerAmount : null,\n                tax: order.taxTotal ? order.taxTotal.integerAmount : null,\n                bc_auth_token: authToken,\n                currency: order.currency,\n                gateway: this.paymentMethodIdMapper.mapToId(paymentMethod),\n                notify_url: order.callbackUrl,\n                order_id: order.orderId ? toString(order.orderId) : null,\n                page_title: document.title ? document.title : null,\n                payment_method_id: paymentMethod.id,\n                reference_id: order.orderId ? toString(order.orderId) : null,\n                return_url: paymentMethod.returnUrl || (order.payment ? order.payment.returnUrl : null),\n            },\n            this.addressMapper.mapToBillingAddress(data),\n            this.customerMapper.mapToCustomer(data),\n            this.metaMapper.mapToMeta(data),\n            this.addressMapper.mapToShippingAddress(data),\n            this.storeMapper.mapToStore(data),\n        );\n\n        const { formattedPayload = {} } = payment;\n\n        objectAssign(payload, formattedPayload);\n\n        return omitNil(payload);\n    }\n}\n"],"file":"payload-mapper.js"}